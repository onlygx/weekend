<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elangzhi.base.dao.IntegralMapper" >
  <resultMap id="BaseResultMap" type="com.elangzhi.base.model.Integral" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="integral" property="integral" jdbcType="DECIMAL" />
    <result column="set_time" property="setTime" jdbcType="TIMESTAMP" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, account_id, integral, set_time, intro, `type`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.elangzhi.base.model.Integral" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_integral (id, account_id, integral, 
      set_time, intro, `type`
      )
    values (#{id,jdbcType=BIGINT}, #{accountId,jdbcType=BIGINT}, #{integral,jdbcType=DECIMAL}, 
      #{setTime,jdbcType=TIMESTAMP}, #{intro,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.elangzhi.base.model.Integral" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_integral
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="setTime != null" >
        set_time,
      </if>
      <if test="intro != null" >
        intro,
      </if>
      <if test="type != null" >
        `type`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=DECIMAL},
      </if>
      <if test="setTime != null" >
        #{setTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elangzhi.base.model.Integral" >
    update t_integral
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=DECIMAL},
      </if>
      <if test="setTime != null" >
        set_time = #{setTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elangzhi.base.model.Integral" >
    update t_integral
    set account_id = #{accountId,jdbcType=BIGINT},
      integral = #{integral,jdbcType=DECIMAL},
      set_time = #{setTime,jdbcType=TIMESTAMP},
      intro = #{intro,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>