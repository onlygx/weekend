<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.elangzhi.base.dao.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.elangzhi.base.model.Notice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="img" property="img" jdbcType="VARCHAR" />
    <result column="set_time" property="setTime" jdbcType="TIMESTAMP" />
    <result column="top" property="top" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.elangzhi.base.model.Notice" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, img, set_time, `top`
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_notice
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_notice
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.elangzhi.base.model.Notice" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_notice (id, title, img, 
      set_time, `top`, content
      )
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, 
      #{setTime,jdbcType=TIMESTAMP}, #{top,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.elangzhi.base.model.Notice" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="title != null" >
        title,
      </if>
      <if test="img != null" >
        img,
      </if>
      <if test="setTime != null" >
        set_time,
      </if>
      <if test="top != null" >
        `top`,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="setTime != null" >
        #{setTime,jdbcType=TIMESTAMP},
      </if>
      <if test="top != null" >
        #{top,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.elangzhi.base.model.Notice" >
    update t_notice
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="img != null" >
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="setTime != null" >
        set_time = #{setTime,jdbcType=TIMESTAMP},
      </if>
      <if test="top != null" >
        `top` = #{top,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.elangzhi.base.model.Notice" >
    update t_notice
    set title = #{title,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      set_time = #{setTime,jdbcType=TIMESTAMP},
      `top` = #{top,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.elangzhi.base.model.Notice" >
    update t_notice
    set title = #{title,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      set_time = #{setTime,jdbcType=TIMESTAMP},
      `top` = #{top,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>